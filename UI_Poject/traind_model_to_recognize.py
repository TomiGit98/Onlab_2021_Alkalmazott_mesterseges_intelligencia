# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'traind_model_to_recognize.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
import cv2
import numpy as np
from PIL import Image

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt

import main_menu


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(658, 658)
        MainWindow.setStyleSheet("background-color: #252525")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 0, 641, 601))
        self.gridLayoutWidget.setMinimumSize(QtCore.QSize(641, 601))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setVerticalSpacing(1)
        self.gridLayout_2.setObjectName("gridLayout_2")
        spacerItem = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.gridLayout_2.addItem(spacerItem, 3, 0, 1, 1)
        self.trainButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.trainButton.setMinimumSize(QtCore.QSize(182, 0))
        self.trainButton.setStyleSheet("QPushButton#trainButton {\n"
"    background-color: red;\n"
"    border-style: ;outset\n"
"    border-width: 0px;\n"
"    border-radius: 10px;\n"
"    border-color: #39FF14;\n"
"    font: bold 14px;\n"
"    min-width: 10em;\n"
"    padding: 6px;\n"
"}")
        self.trainButton.setObjectName("trainButton")
        self.gridLayout_2.addWidget(self.trainButton, 2, 0, 1, 1, QtCore.Qt.AlignVCenter)
        self.backToMenuButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.backToMenuButton.sizePolicy().hasHeightForWidth())
        self.backToMenuButton.setSizePolicy(sizePolicy)
        self.backToMenuButton.setStyleSheet("QPushButton#backToMenuButton {\n"
"    background-color: #CBCBCB;\n"
"    border-style: ;outset\n"
"    border-width: 0px;\n"
"    border-radius: 10px;\n"
"    border-color: #39FF14;\n"
"    font: bold 14px;\n"
"    min-width: 2em;\n"
"    padding: 6px;\n"
"}")
        self.backToMenuButton.setIconSize(QtCore.QSize(40, 40))
        self.backToMenuButton.setObjectName("backToMenuButton")
        self.gridLayout_2.addWidget(self.backToMenuButton, 4, 0, 1, 1, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignBottom)
        self.listView = QtWidgets.QListView(self.gridLayoutWidget)
        self.listView.setObjectName("listView")
        self.gridLayout_2.addWidget(self.listView, 0, 0, 1, 1)
        self.gridLayout_2.setRowStretch(0, 7)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 658, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        #
        self.trainButton.clicked.connect(self.trainDatasets)
        self.backToMenuButton.clicked.connect(self.backToMainMenu)
        #

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.trainButton.setText(_translate("MainWindow", "Train Model"))
        self.backToMenuButton.setText(_translate("MainWindow", "Back To Menu"))

    def backToMainMenu(self):
        print("Back")
        u = main_menu.Ui_MainMenu()
        u.setupUi(MainWindow)
        MainWindow.show()

    def trainDatasets(self):
        # Initialize names and path to empty list
        names = []
        path = []

        # Get the names of all the users
        for users in os.listdir("FaceRecognition\Datasets"):
            names.append(users)
            print(users)

        # Get the path to all the images
        for name in names:
            for image in os.listdir("FaceRecognition\Datasets\{}".format(name)):
                path_string = os.path.join("FaceRecognition\Datasets", name, image)
                # norm = os.path.normpath(path_string)
                path.append(path_string)

        print(path[1])

        faces = []
        ids = []

        model = QtGui.QStandardItemModel()
        self.listView.setModel(model)

        # For each image create a numpy array and add it to faces list
        for img_path in path:
            print(img_path)
            image = Image.open(img_path).convert("L")
            imgNp = np.array(image, "uint8")
            faces.append(imgNp)
            id = int(img_path.split(str(os.sep))[3].split("_")[0])
            print(id)
            ids.append(id)

            item = QtGui.QStandardItem(img_path)
            item.setForeground(Qt.red)
            model.appendRow(item)

        ids = np.array(ids)
        trainer = cv2.face.LBPHFaceRecognizer_create()
        trainer.train(faces, ids)
        trainer.write("training.yml")
        print("traning.yml")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
